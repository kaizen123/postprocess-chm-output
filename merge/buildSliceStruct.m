function [objects, cc] = buildSliceStruct( cc, opts )
% Builds a structure that has one field per slice of the image stack whose
% 3D connected components are specified in the structure, cc. Each field
% contains a list of the connected components, or objects, that are present
% on the given slice. A field, check, is also created. This field specifies
% all objects to be checked for merges, which will be all objects whose
% maximum slice does not equal the maximum slice of the entire stack. This
% structure is usd during the merging process.
%
% Required Inputs
% ===============
%     cc       Structure of 3D connected components generated by bwconncomp 
%     opts     Structure of options provided by the calling function
%
% Outputs
% =======
%     objects    Structure with one field per slice. Each field lists the
%                connected component numbers that occurs on the given
%                slice.
%     cc         Updated connected components structure
%
% See also merge_cc_across_gaps, findMerges
%

fprintf('Building a structure of objects based on slice number. ')
objects = struct; 
objects.check = [];
for ii = 1:cc.NumObjects
    % Get the unique values of Z for the given 3DCC
    [~, ~, z] = ind2sub(opts.stackdims, cc.PixelIdxList{ii});
    zunique = unique(z);
    
    % Create new fields for the minimum Z value and maximum Z value in the
    % input cc structure. Append values for each 3DCC.
    if ii > 1
        cc.zmin = [cc.zmin min(zunique)];
        cc.zmax = [cc.zmax max(zunique)];
    else
        cc.zmin = min(zunique);
        cc.zmax = max(zunique);
    end
    
    if cc.zmax(ii) ~= opts.stackdims(3)
        objects.check = [objects.check ii];
    end
    
    % Loop over each slice of the current 3DCC. Store the object number to
    % the field of the slice's structure that corresponds to the given slice
    for jj = cc.zmin(ii) : cc.zmax(ii)
        str = ['z' sprintf('%04d', jj)];
        if ~isfield(objects, str)
            objects.(str) = ii;
        else
            objects.(str) = [objects.(str) ii];
        end
    end
end

end